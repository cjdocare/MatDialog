{"version":3,"file":"MatDialog.js","sourceRoot":"","sources":["../Script/Code/Helper.ts","../Script/Code/Prompt.ts","../Script/Code/MainLogic.ts","../Script/index.ts","../Script/Code/Dialog.ts"],"names":[],"mappings":"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","sourcesContent":["interface IConfirm {\r\n    Text: string,\r\n    Ok: Button,\r\n    Cancel: Button,\r\n    ExecuteAfter: Function,\r\n    ExecuteBefore: Function\r\n};\r\ninterface IAlert {\r\n    Text: string,\r\n    Button: Button,\r\n    ExecuteAfter: Function,\r\n    ExecuteBefore: Function\r\n}\r\ninterface Button {\r\n    Text: string,\r\n    ClassName: string,\r\n    Value: string\r\n}\r\n\r\nclass Helper {\r\n    createAlert(Msg: string) {\r\n        var ElementInnerHTML = '<div class=\"modal-header\">' +\r\n            '<i class=\"modal-button material-icons right-align header-close-icon\">&#xE5CD;</i></div>' +\r\n            '<div class=\"divider\"></div><div class=\"modal-content\">' + Msg + '</div>' + '<div class=\"divider\"></div>' +\r\n            '<div class=\"modal-footer\"><a href=\"#!\" class=\"modal-action modal-close waves-effect waves-green btn\">OK</a></div>';\r\n        $('#divMatDialog .modal').data('type', 'alert').html(ElementInnerHTML);\r\n    }\r\n\r\n    createCustomAlert(option: IAlert) {\r\n        if (option.ExecuteBefore) {\r\n            option.ExecuteBefore();\r\n        }\r\n        var ButtonContent = (option.Button && option.Button.Text) ? option.Button.Text : 'Ok';\r\n        var ElementInnerHTML = '<div class=\"modal-header\">' +\r\n            '<i class=\"modal-button material-icons right-align header-close-icon\">&#xE5CD;</i></div>' +\r\n            '<div class=\"divider\"></div><div class=\"modal-content\">' + option.Text + '</div>' + '<div class=\"divider\"></div>' +\r\n            '<div class=\"modal-footer\"><a href=\"#!\" class=\"modal-action modal-close waves-effect waves-green btn\">' + ButtonContent + '</a></div>';\r\n        if (option.Button && option.Button.ClassName) {\r\n            $('#divMatDialog .modal .btn').addClass(option.Button.ClassName);\r\n        }\r\n        $('#divMatDialog .modal').data('type', 'alert').html(ElementInnerHTML);\r\n        if (option.ExecuteAfter) {\r\n            option.ExecuteAfter();\r\n        }\r\n    }\r\n\r\n    createConfirm(Msg: string) {\r\n        var ElementInnerHTML = '<div class=\"modal-header\">' +\r\n            '<i class=\"modal-button material-icons right-align header-close-icon\">&#xE5CD;</i></div>' +\r\n            '<div class=\"divider\"></div><div class=\"modal-content\">' + Msg + '</div>' + '<div class=\"divider\"></div>' +\r\n            '<div class=\"modal-footer\"><a href=\"#!\" data-val=\"false\" class=\"modal-button btn waves-effect waves-green confirm btn-cancel\">Cancel</a>' +\r\n            '<a href=\"#!\" data-val=\"true\" class=\"modal-button btn waves-effect waves-green confirm btn-ok\">OK</a></div>';\r\n        $('#divMatDialog .modal').data('type', 'confirm').html(ElementInnerHTML);\r\n\r\n    }\r\n\r\n    createCustomConfirm = function (option: IConfirm) {\r\n        if (option.ExecuteBefore) {\r\n            option.ExecuteBefore();\r\n        }\r\n        var OkLabel = (option.Ok && option.Ok.Text) ? option.Ok.Text : 'Ok',\r\n            CancelLabel = (option.Cancel && option.Cancel.Text) ? option.Cancel.Text : 'Cancel'\r\n        var ElementInnerHTML = '<div class=\"modal-header\">' +\r\n            '<i class=\"modal-button material-icons right-align header-close-icon\">&#xE5CD;</i></div>' +\r\n            '<div class=\"divider\"></div><div class=\"modal-content\">' + option.Text + '</div>' + '<div class=\"divider\"></div>' +\r\n            '<div class=\"modal-footer\"><a href=\"#!\" data-val=\"false\" class=\"modal-button btn waves-effect waves-green confirm btn-cancel\">' + CancelLabel + '</a>' +\r\n            '<a href=\"#!\" data-val=\"true\" class=\"modal-button btn waves-effect waves-green confirm btn-ok\">' + OkLabel + '</a></div>';\r\n        $('#divMatDialog .modal').data('type', 'confirm').html(ElementInnerHTML);\r\n        if (option.Ok && option.Ok.ClassName) {\r\n            $('#divMatDialog .modal .confirm .btn-ok').addClass(option.Ok.ClassName);\r\n        }\r\n        if (option.Cancel && option.Cancel.ClassName) {\r\n            $('#divMatDialog .modal .confirm .btn-cancel').addClass(option.Cancel.ClassName);\r\n        }\r\n        if (option.ExecuteAfter) {\r\n            option.ExecuteAfter();\r\n        }\r\n    }\r\n\r\n\r\n}","interface IPrompt {\r\n    Text: string,\r\n    Ok: Button,\r\n    Cancel: Button,\r\n    Input: IInput,\r\n    ExecuteAfter: Function,\r\n    ExecuteBefore: Function\r\n}\r\n\r\ninterface IInput {\r\n    Type: string,\r\n    Values: Array<{\r\n        Text: string,\r\n        Value: string\r\n    }>\r\n}\r\n\r\nmodule MatDialogs {\r\n    export class Prompt {\r\n        createPrompt(Msg: string) {\r\n            var ElementInnerHTML = '<div class=\"modal-header\">' +\r\n                '<span class=\"prompt-msg\">' + Msg + '</span>' +\r\n                '<i class=\"modal-button material-icons right-align header-close-icon\">&#xE5CD;</i></div>' +\r\n                '<div class=\"divider\"></div><div class=\"modal-content\"><input type=\"text\" /></div>' + '<div class=\"divider\"></div>' +\r\n                '<div class=\"modal-footer\"><a href=\"#!\" data-val=\"false\" class=\"modal-button btn waves-effect waves-green prompt btn-cancel\">Cancel</a>' +\r\n                '<a href=\"#!\" data-val=\"true\" class=\"modal-button btn waves-effect waves-green prompt btn-ok\">Ok</a></div>';\r\n            $('#divMatDialog .modal').data('type', 'prompt').html(ElementInnerHTML);\r\n        }\r\n\r\n        createCustomPrompt(option: IPrompt) {\r\n            if (option.ExecuteBefore) {\r\n                option.ExecuteBefore();\r\n            }\r\n            var OkLabel = (option.Ok && option.Ok.Text) ? option.Ok.Text : 'Ok',\r\n                CancelLabel = (option.Cancel && option.Cancel.Text) ? option.Cancel.Text : 'Cancel'\r\n\r\n            var ElementInnerHTML = '<div class=\"modal-header\">' +\r\n                '<span class=\"prompt-msg\">' + option.Text + '</span>' +\r\n                '<i class=\"modal-button material-icons right-align header-close-icon\">&#xE5CD;</i></div>' +\r\n                '<div class=\"divider\"></div><div class=\"modal-content\">' + this.getInnerContent(option.Input) + '</div><div class=\"divider\"></div>' +\r\n                '<div class=\"modal-footer\"><a href=\"#!\" data-val=\"false\" class=\"modal-button btn waves-effect waves-green prompt btn-cancel\">' + CancelLabel + '</a>' +\r\n                '<a href=\"#!\" data-val=\"true\" class=\"modal-button btn waves-effect waves-green prompt btn-ok\">' + OkLabel + '</a></div>';\r\n            $('#divMatDialog .modal').data('type', 'prompt').html(ElementInnerHTML);\r\n\r\n            if (option.Ok && option.Ok.ClassName) {\r\n                $('#divMatDialog .modal .prompt .btn-ok').addClass(option.Ok.ClassName);\r\n            }\r\n            if (option.Cancel && option.Cancel.ClassName) {\r\n                $('#divMatDialog .modal .prompt .btn-cancel').addClass(option.Cancel.ClassName);\r\n            }\r\n\r\n            if (option.ExecuteAfter) {\r\n                option.ExecuteAfter();\r\n            }\r\n        }\r\n\r\n        getInnerContent = function (input: IInput) {\r\n            var InnerContent;\r\n            switch (input.Type) {\r\n                case 'text':\r\n                case 'date':\r\n                case 'number':\r\n                case 'email':\r\n                case 'password': return '<input type=\"' + input.Type + '\"/>';\r\n                case 'select': if (input.Values && input.Values.length > 0) {\r\n                    var Content = '<select id=\"selectMatDialog\" class=\"browser-default\">'\r\n                    input.Values.forEach(function (value) {\r\n                        Content += '<option value=' + value.Value + '>' + value.Text + '</option>';\r\n                    })\r\n                    Content += '</select>';\r\n                    return Content;\r\n                }\r\n                else {\r\n                    console.error('no values provided');\r\n                    return '';\r\n                }\r\n                case 'radio': if (input.Values && input.Values.length > 0) {\r\n                    var Content = \"\";\r\n                    input.Values.forEach(function (value, index) {\r\n                        Content += '<div class=\"margin-top-5px\"><input type=\"radio\" id=' + index + ' name=\"radioMatDialog\" value=\"' + value.Value + '\"/><label for=' + index + '>' + value.Text + '</label></div>';\r\n                    });\r\n                    return Content;\r\n                }\r\n                else {\r\n                    console.error('no values provided');\r\n                    return '';\r\n                }\r\n                case 'check':\r\n                case 'checkbox': if (input.Values && input.Values.length > 0) {\r\n                    var Content = \"\";\r\n                    input.Values.forEach(function (value, index) {\r\n                        Content += '<div class=\"margin-top-5px\"><input type=\"checkbox\" id=' + index + ' name=\"checkMatDialog\" value=' + value.Value + '><label for=' + index + '>' + value.Text + '</label></div>';\r\n                    });\r\n                    return Content;\r\n                }\r\n                else {\r\n                    console.error('no values provided');\r\n                    return '';\r\n                }\r\n                default: return '<input type=\"text\" />';\r\n            }\r\n        }\r\n    }\r\n}","interface IDialogOption {\r\n    Dismissible: Boolean, // Modal can be dismissed by clicking outside of the modal\r\n    Opacity: number, // Opacity of modal background\r\n    InDuration: number, // Transition in duration\r\n    OutDuration: number, // Transition out duration\r\n    StartingTop: string, // Starting top style attribute\r\n    EndingTop: string\r\n}\r\n\r\nclass MatDialog extends Helper {\r\n    callBack: Function;\r\n    Option: IPrompt;\r\n\r\n    registerModal = function (config: IDialogOption) {\r\n        var DefaultConfig = <IDialogOption>{\r\n            Dismissible: true,\r\n            EndingTop: '2%',\r\n            InDuration: 300,\r\n            OutDuration: 200,\r\n            Opacity: 0.5,\r\n            StartingTop: '2%'\r\n        };\r\n        if (config) {\r\n            //registering modal\r\n            $('.modal').modal({\r\n                dismissible: config.Dismissible ? config.Dismissible : DefaultConfig.Dismissible, // Modal can be dismissed by clicking outside of the modal\r\n                opacity: config.Opacity ? config.Opacity : DefaultConfig.Opacity, // Opacity of modal background\r\n                inDuration: config.InDuration ? config.InDuration : DefaultConfig.InDuration, // Transition in duration\r\n                outDuration: config.OutDuration ? config.OutDuration : DefaultConfig.OutDuration, // Transition out duration\r\n                startingTop: config.StartingTop ? config.StartingTop : DefaultConfig.StartingTop, // Starting top style attribute\r\n                endingTop: config.EndingTop ? config.EndingTop : DefaultConfig.EndingTop // Ending top style attribute,\r\n            });\r\n        }\r\n        else {\r\n            $('.modal').modal({\r\n                dismissible: DefaultConfig.Dismissible,\r\n                opacity: DefaultConfig.Opacity,\r\n                inDuration: DefaultConfig.InDuration,\r\n                outDuration: DefaultConfig.OutDuration,\r\n                startingTop: DefaultConfig.StartingTop,\r\n                endingTop: DefaultConfig.EndingTop,\r\n            });\r\n        }\r\n    }\r\n\r\n    setModalConfig = function (config: IDialogOption) {\r\n        this.registerModal(config);\r\n    }\r\n\r\n    constructor(config: IDialogOption) {\r\n        super();\r\n        var That = this;\r\n        //create a matdialog container\r\n        if (document.getElementById('divMatDialog') == null) {\r\n            var container = document.createElement('div');\r\n            container.id = 'divMatDialog';\r\n            container.innerHTML = '<div class=\"modal\"></div>'\r\n            document.body.appendChild(container);\r\n        }\r\n\r\n        this.registerModal(config);\r\n        $('#divMatDialog .modal').on('click', '.modal-button', function () {\r\n            var Modal = $('#divMatDialog .modal'),\r\n                DialogType = Modal.data('type');\r\n            Modal.modal('close');\r\n            if (That.callBack != null) {\r\n                if (DialogType == 'alert') {\r\n                    That.callBack();\r\n                }\r\n                else if (DialogType == 'confirm' || DialogType == 'dialog') {\r\n                    var Value = $(this).data('val');\r\n                    That.callBack(Value != null ? JSON.parse(Value) : false);\r\n                }\r\n                else if (DialogType == 'prompt') {\r\n                    var Value = $(this).data('val');\r\n                    if (Value != null ? JSON.parse(Value) : false) {\r\n                        var InputValue;\r\n                        if (That.Option.Input) {\r\n                            InputValue = That.getPromptInputValue(That.Option.Input.Type);\r\n                        }\r\n                        else {\r\n                            InputValue = $('#divMatDialog .modal input[type=\"text\"]').val();\r\n                        }\r\n                        That.callBack(InputValue && InputValue.length > 0 ? InputValue : null);\r\n                    }\r\n                    else {\r\n                        That.callBack(null);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n\r\n        $('body').on('click', '.modal-overlay', function () {\r\n            if (That.callBack != null) {\r\n                var DialogType = $('#divMatDialog .modal').data('type');\r\n                if (DialogType == 'alert') {\r\n                    That.callBack();\r\n                }\r\n                else if (DialogType == 'confirm') {\r\n                    That.callBack(false);\r\n                }\r\n                else if (DialogType == 'prompt' || DialogType == 'dialog') {\r\n                    That.callBack(null);\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n    private getPromptInputValue(type: string) {\r\n        switch (type) {\r\n            case 'text':\r\n            case 'date':\r\n            case 'number':\r\n            case 'email':\r\n            case 'password': return $('#divMatDialog .modal input[type=' + type + ']').val();\r\n            case 'select': return $('#divMatDialog .modal #selectMatDialog').val();\r\n            case 'radio': return $('#divMatDialog .modal input[name=\"radioMatDialog\"]:checked').val()\r\n            case 'check':\r\n            case 'checkbox': var Values = [];\r\n                $('#divMatDialog .modal input[name=\"checkMatDialog\"]:checked').each(function () {\r\n                    Values.push($(this).val());\r\n                });\r\n                return Values;\r\n            default: return $('#divMatDialog .modal input[type=\"text\"]').val();\r\n        }\r\n    }\r\n\r\n    alert(Message: any, callBack: Function) {\r\n        this.callBack = callBack;\r\n        if (typeof (Message) === 'object') {\r\n            this.createCustomAlert(Message);\r\n        }\r\n        else {\r\n            this.createAlert(Message);\r\n        }\r\n        $('#divMatDialog .modal').modal('open');\r\n    }\r\n\r\n    confirm(Message: any, callBack: Function) {\r\n        this.callBack = callBack;\r\n        if (typeof (Message) === 'object') {\r\n            this.createCustomConfirm(Message);\r\n        }\r\n        else {\r\n            this.createConfirm(Message);\r\n        }\r\n        $('#divMatDialog .modal').modal('open');\r\n    }\r\n\r\n    prompt(Message: any, callBack: Function) {\r\n        this.callBack = callBack;\r\n        var Prompt = new MatDialogs.Prompt();\r\n        if (typeof (Message) === 'object') {\r\n            Prompt.createCustomPrompt(Message);\r\n        }\r\n        else {\r\n            Prompt.createPrompt(Message);\r\n        }\r\n        this.Option = Message;\r\n        $('#divMatDialog .modal').modal('open');\r\n        $('#divMatDialog .modal .modal-content input').focus();\r\n    }\r\n\r\n    dialog(option: IDialog, callBack) {\r\n        if (option) {\r\n            this.callBack = callBack;\r\n            new MatDialogs.Dialog().createDialog(option);\r\n        }\r\n        else {\r\n            console.error('no Dialog option provided');\r\n        }\r\n        $('#divMatDialog .modal').modal('open');\r\n    }\r\n}","/// <reference path=\"jquery.d.ts\" />\r\n/// <reference path=\"Code/Helper.ts\" />\r\n/// <reference path=\"Code/Prompt.ts\" />\r\n\r\n/// <reference path=\"Code/MainLogic.ts\" />\r\n\r\n\r\n","interface IDialog {\r\n    Title: {\r\n        Text: string,\r\n        ShowClose: boolean\r\n    },\r\n    Content: {\r\n        Text: string,\r\n        Class: string\r\n    },\r\n    ButtonType: string\r\n    Buttons: Array<Button>,\r\n    ExecuteAfter: Function,\r\n    ExecuteBefore: Function\r\n}\r\nmodule MatDialogs {\r\n    export class Dialog {\r\n        createDialog = function (option: IDialog) {\r\n            if (option.ExecuteBefore) {\r\n                option.ExecuteBefore();\r\n            }\r\n\r\n            var ElementInnerHTML = '';\r\n            //Title\r\n            if (option.Title) {\r\n                ElementInnerHTML += '<div class=\"modal-header\">'\r\n                if (option.Title.Text) {\r\n                    ElementInnerHTML += '<span class=\"prompt-msg\">' + option.Title.Text + '</span>';\r\n                }\r\n                if (option.Title.ShowClose == undefined || JSON.parse(<any>option.Title.ShowClose)) {\r\n                    ElementInnerHTML += '<i class=\"modal-button material-icons right-align header-close-icon\">&#xE5CD;</i>'\r\n                }\r\n                ElementInnerHTML += '</div><div class=\"divider\"></div>'\r\n            }\r\n            //Content\r\n            if (option.Content) {\r\n                ElementInnerHTML += '<div class=\"modal-content ' + (option.Content.Class ? option.Content.Class : \"\") + '\">' + option.Content.Text + '</div>';\r\n            }\r\n            //Button\r\n            var BottomHtml = \"\";\r\n            if (option.ButtonType) {\r\n                var CancelLabel = 'Cancel', OkLabel = 'Ok';\r\n                if (option.ButtonType.toLowerCase() == 'ok') {\r\n                    BottomHtml = '<a href=\"#!\" data-val=\"true\" class=\"modal-button btn waves-effect waves-green prompt btn-ok\">' + OkLabel + '</a>';\r\n                }\r\n                else {\r\n                    BottomHtml = '<a href=\"#!\" data- val=\"false\" class=\"modal-button btn waves-effect waves-green prompt btn-cancel\" > ' + CancelLabel + ' </a>' +\r\n                        '<a href=\"#!\" data-val=\"true\" class=\"modal-button btn waves-effect waves-green prompt btn-ok\">' + OkLabel + '</a>';\r\n                }\r\n            }\r\n            else if (option.Buttons) {\r\n                option.Buttons.forEach(function (item) {\r\n                    BottomHtml = '<a href=\"#!\" data-val=' + item.Value + 'class=\"modal-button btn waves-effect waves-green prompt btn-ok ' + (item.ClassName ? item.ClassName : \"\") + '\">' + item.Text + '</a>';\r\n                })\r\n            }\r\n            if (BottomHtml.length > 0) {\r\n                ElementInnerHTML += '<div class=\"divider\"></div><div class=\"modal-footer\">' + BottomHtml + '</div>';\r\n            }\r\n            $('#divMatDialog .modal').data('type', 'dialog').html(ElementInnerHTML);\r\n            if (option.ExecuteAfter) {\r\n                option.ExecuteAfter();\r\n            }\r\n        }\r\n    }\r\n}"]}